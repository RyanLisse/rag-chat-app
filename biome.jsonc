{
  "$schema": "https://biomejs.dev/schemas/2.0.6/schema.json",
  "files": {
    "ignoreUnknown": false,
    "includes": [
      "**",
      "!**/bun.lockb",
      "!**/lib/db/migrations",
      "!**/lib/editor/react-renderer.tsx",
      "!**/node_modules",
      "!**/.next",
      "!**/public",
      "!**/.vercel",
      "!**/tests/**",
      "!**/*.test.ts",
      "!**/*.test.tsx",
      "!**/*.spec.ts",
      "!**/*.spec.tsx",
      "!**/playwright.config.ts",
      "!**/components/ui/**",
      "!**/.git/**",
      "!**/dist/**",
      "!**/build/**",
      "!**/coverage/**",
      "!**/*.min.js",
      "!**/*.min.css"
    ]
  },
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "defaultBranch": "main",
    "useIgnoreFile": true
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 80,
    "attributePosition": "auto"
  },
  "assist": { "actions": { "source": { "organizeImports": "on" } } },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "correctness": {
        "noUnusedImports": "warn",
        "useExhaustiveDependencies": "warn"
      },
      "style": {
        "noDefaultExport": "off",
        "useNamingConvention": {
          "level": "warn",
          "options": {
            "strictCase": false,
            "conventions": [
              {
                "selector": {
                  "kind": "function"
                },
                "formats": ["camelCase", "PascalCase"]
              },
              {
                "selector": {
                  "kind": "variable"
                },
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": {
                  "kind": "typeLike"
                },
                "formats": ["PascalCase"]
              }
            ]
          }
        },
        "noParameterAssign": "error",
        "useAsConstAssertion": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useSingleVarDeclarator": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error",
        "noUselessElse": "error"
      },
      "suspicious": {
        "noExplicitAny": "warn",
        "useAwait": "warn"
      }
    }
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "es5",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteStyle": "single"
    }
  },
  "overrides": [
    {
      "includes": ["app/**/api/**/route.ts", "app/**/api/**/route.js"],
      "linter": {
        "rules": {
          "style": {
            "useNamingConvention": "off"
          }
        }
      }
    },
    {
      "includes": ["tailwind.config.ts", "tailwind.config.js"],
      "linter": {
        "rules": {
          "style": {
            "useNamingConvention": "off"
          }
        }
      }
    },
    {
      "includes": [
        "app/**/api/chat/schema.ts",
        "lib/ai/**/*.ts",
        "**/*schema.ts"
      ],
      "linter": {
        "rules": {
          "style": {
            "useNamingConvention": "off"
          }
        }
      }
    },
    {
      "includes": [
        "app/**/page.tsx",
        "app/**/layout.tsx",
        "app/**/error.tsx",
        "app/**/loading.tsx",
        "app/**/not-found.tsx"
      ],
      "linter": {
        "rules": {
          "style": {
            "noDefaultExport": "off"
          }
        }
      }
    },
    {
      "includes": [
        "**/*.test.ts",
        "**/*.test.tsx",
        "**/*.spec.ts",
        "**/*.spec.tsx"
      ],
      "linter": {
        "rules": {
          "suspicious": {
            "noExplicitAny": "off"
          }
        }
      }
    },
    {
      "includes": ["lib/db/migrations/**"],
      "linter": {
        "enabled": false
      }
    }
  ]
}
