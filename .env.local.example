# Environment Configuration for RAG Chat Application

# AI Provider API Keys
# ====================
# OpenAI (for GPT-4.1, o4-mini, and Vector Store)
OPENAI_API_KEY=your-key-here

# Anthropic (for Claude 4)
ANTHROPIC_API_KEY=your-key-here

# Google (for Gemini 2.5)
GOOGLE_API_KEY=your-key-here

# XAI (optional)
XAI_API_KEY=your-key-here

# Vector Store & Assistant
# ========================
OPENAI_VECTORSTORE_ID=vs_your_id_here
# Optional: If you have an existing assistant, set its ID here
# OPENAI_ASSISTANT_ID=asst_your_id_here

# App Config
# ==========
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Database Configuration (Choose one)
# ==================================
# Option 1: Turso Database (Recommended for development)
# Local Turso (run `turso dev` first)
TURSO_DATABASE_URL=http://localhost:8080

# OR Remote Turso (get from https://turso.tech)
# TURSO_DATABASE_URL=libsql://your-database.turso.io
# TURSO_AUTH_TOKEN=your-auth-token

# Option 2: PostgreSQL
# DATABASE_URL=postgres://postgres:postgres@localhost:5432/rag_chat

# Option 3: Mock Database (for quick testing)
# DATABASE_URL=file:mock.db

# Redis Configuration (for caching)
REDIS_URL=redis://localhost:6379

# Auth Configuration
AUTH_SECRET=your-auth-secret-here
AUTH_URL=http://localhost:3000

# Monitoring Configuration
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
OTEL_SERVICE_NAME=rag-chat-app

# Error Tracking (Sentry)
SENTRY_DSN=your-sentry-dsn-here
SENTRY_ENVIRONMENT=development

# Log Level
LOG_LEVEL=debug